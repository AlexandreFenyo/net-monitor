<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:util="http://www.springframework.org/schema/util"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <!-- permettre la configuration via des annotations sous fenyo.net.monitor -->
    <mvc:annotation-driven />
    <context:component-scan base-package="fenyo.net.monitor" />

    <!-- importer les valeurs des paramètres de configuration -->
    <context:property-placeholder location="META-INF/config.properties" />

    <!-- mappings d'URI directs, sans nécessiter de passer par un contrôleur -->
    <mvc:resources mapping="/static/**" location="/static/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/html/**" location="/html/" />

    <!-- indiquer à Spring MVC comment résoudre l'emplacement des vues à partir de leur nom -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/views/" />
      <property name="suffix" value=".jsp" />
    </bean>

    <bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
      <property name="maxTextMessageBufferSize" value="8192" />
      <property name="maxBinaryMessageBufferSize" value="8192" />
    </bean>

	<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler" name="heartbeatScheduler">
		<property name="poolSize" value="1"/>
	    <property name="threadNamePrefix" value="wss-heartbeat-thread-"/>
	</bean>

<!-- si on veut éviter que tomcat ne compresse ses messages, pour pouvoir utiliser wireshark, démarrer tomcat avec le paramètre suivant : -Dorg.apache.tomcat.websocket.DISABLE_BUILTIN_EXTENSIONS=true -->

    <websocket:message-broker application-destination-prefix="/app" user-destination-prefix="/client">
		<websocket:stomp-endpoint path="/socket">
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/data" heartbeat="1000,1000" scheduler="heartbeatScheduler" />
	</websocket:message-broker>
  




<!-- <mvc:annotation-driven>
        <mvc:message-converters>
           <bean
             class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
 -->              
<!--            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
               <property name="marshaller" ref="xstreamMarshaller" />
               <property name="unmarshaller" ref="xstreamMarshaller" />
           </bean> 
 --><!--         </mvc:message-converters>
    </mvc:annotation-driven>
     --> 
<!--     <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller" />
 --> 
 
     
</beans>
